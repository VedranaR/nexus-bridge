{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/n19popup.js"],"names":["SiebelAppFacade","N19Helper","settings","consts","SiebelJS","Dependency","pm","isPopup","appletName","Get","view","SiebelApp","S_App","GetActiveView","viewName","GetName","applet","GetAppletMap","isListApplet","GetListOfColumns","appletId","required","lov","appletInputs","document","getElementById","querySelectorAll","i","length","attributes","push","name","nodeValue","AttachNotificationHandler","get","propSet","type","GetProperty","arr","CCFMiscUtil_StringToArray","splice","filter","el","console","log","n19popup","N19popup","GetControl","GetControls","method","ExecuteMethod","inputName","indexOf","ret","propArray","SetActiveControl","_getControl","hide","cb","Error","canOpenPopup","SetActiveAppletInternal","_setActiveControl","showPopupApplet","_showPopupApplet","controls","appletControls","returnControls","Object","keys","control","controlUiType","GetUIType","_isSkipControl","controlName","controlInputName","GetInputName","obj","label","GetDisplayName","uiType","_isRequired","boundedPick","IsBoundedPick","staticPick","IsStaticBounded","pickApplet","GetPickApplet","isPostChanges","IsPostChanges","maxSize","GetMaxSize","maxChars","GetMaxChars","fieldName","GetFieldName","isLink","readOnly","GetRenderer","GetColumnHelper","GetActualControlName","staticLOV","_getStaticLOV","GetRadioGroupPropSet","childArray","lovs","reduce","accumulator","currentValue","lic","FieldValue","val","DisplayName","canInvokeMethod","_navigate","index","getNumRows","positionOnRow","cmd","ai","scope","args","CommandManager","GetInstance","InvokeCommand","call","_invokeCommandManager","value","_getValueForControl","OnControlEvent","toString","ps","NewPropertySet","SetProperty","InvokeMethod","sort","raw","getSelection","_controls","isRecord","getRecordSet","controlFieldName","getControlValue","readonly","rowId","_newQuery","async","mask","selfbusy","psOutput","psInput","_getControlInputNameForIdQuery","Clone","CallServerApplet","params","targetViewName","targetAppletName","id","getCurrentRecord","Id","SWECmd","encodeURI","GotoView","insertPending","service","GetService","inPropSet","GetTitle","GetAppletLabel","isPopupHidden","resolvePromise","popupAppletN19","assocAppletN19","constructor","N19processNewPopup","ProcessNewPopup","processNewPopup","N19viewLoaded","contentUpdater","viewLoaded","isPopupOpen","getPopupApplet","GetPModel","assocApplet","GetPopupApplet","SetShowNewPage","popupPM","GetPopupPM","Setup","activeView","activeApplet","GetActiveApplet","SetActiveAppletBeforePopup","AddProperty","url","GetPageURL","split","Init","isPopupApplet","GetPopupAppletName","isPickApplet","GetPickAppletName","reInitPopup","currPopups","isOpen","GetPopupControl","closePopupApplet","Promise","resolve","then"],"mappings":"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","file":"N19Helper.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// for now only for form and list applets\n\nimport N19popup from './n19popup';\n\nSiebelAppFacade.N19Helper = class {\n  constructor(settings) {\n    this.consts = SiebelJS.Dependency('SiebelApp.Constants');\n    this.pm = settings.pm;\n    this.isPopup = settings.isPopup;\n    this.appletName = this.pm.Get('GetName');\n    this.view = SiebelApp.S_App.GetActiveView();\n    this.viewName = this.view.GetName();\n    this.applet = SiebelApp.S_App.GetActiveView().GetAppletMap()[this.appletName];\n    this.isListApplet = typeof this.applet.GetListOfColumns === 'function';\n    this.appletId = `s_${this.pm.Get('GetFullId')}_div`;\n    this.required = []; // will be empty for list applet\n    this.lov = {};\n\n    // populate the required array for form applets\n    if (!this.isListApplet) {\n      const appletInputs = document.getElementById(this.appletId).querySelectorAll('input');\n      for (let i = 0; i < appletInputs.length; i += 1) {\n        if (appletInputs[i].attributes['aria-required']) {\n          this.required.push(appletInputs[i].attributes.name.nodeValue);\n        }\n      }\n    }\n\n    // listener to get dynamic LOVs\n    this.pm.AttachNotificationHandler(this.consts.get('SWE_PROP_BC_NOTI_GENERIC'), (propSet) => {\n      const type = propSet.GetProperty(this.consts.get('SWE_PROP_NOTI_TYPE'));\n      if (type === 'GetQuickPickInfo') {\n        const arr = [];\n        CCFMiscUtil_StringToArray(propSet.GetProperty(this.consts.get('SWE_PROP_ARGS_ARRAY')), arr);\n        if (this.viewName === arr[1] && this.appletName === arr[2]) {\n          this.lov[arr[3]] = arr.splice(5).filter(el => el !== '');\n        }\n      }\n    });\n\n    // eslint-disable-next-line no-console\n    console.log('N19Helper started....', this.appletName);\n\n    // instantinate the n19popup\n    this.n19popup = null;\n    if (!this.isPopup) {\n      if (!SiebelAppFacade.N19popup) { // use the internal variable to check singleton\n        SiebelAppFacade.N19popup = new N19popup();\n      }\n      this.n19popup = SiebelAppFacade.N19popup;\n    }\n  }\n\n  _getControl(name) {\n    return this.applet.GetControl(name);\n  }\n\n  returnControls() {\n    if (this.isListApplet) {\n      return this.applet.GetListOfColumns();\n    }\n    return this.applet.GetControls();\n    // the same - ? // return pm.Get('GetControls');\n  }\n\n  canInvokeMethod(method) {\n    return this.pm.ExecuteMethod('CanInvokeMethod', method);\n  }\n\n  // called into the getControls to reduce the amount of the returned controls\n  _isSkipControl(type) {\n    // https://docs.oracle.com/cd/E74890_01/books/ConfigOpenUI/appendix_a_api002.htm\n    // maybe we need to exclude more types\n    return (type === this.consts.get('SWE_PST_BUTTON_CTRL'))\n      || (type === this.consts.get('SWE_CTRL_LINK'))\n      || (type === this.consts.get('SWE_CTRL_PLAINTEXT'))\n      || (type === 'null'); // GetUiType returns string\n  }\n\n  _isRequired(inputName) {\n    // required is empty for list applets\n    return this.required.indexOf(inputName) > -1;\n  }\n\n  _getStaticLOV(arr) {\n    const ret = [];\n    for (let i = 0; i < arr.length; i += 1) {\n      ret.push(arr[i].propArray);\n    }\n    return ret;\n  }\n\n  _setActiveControl(name) {\n    return this.applet.SetActiveControl(this._getControl(name));\n  }\n\n  _showPopupApplet(name, hide, cb) {\n    if (!this.n19popup) { // if not initialized it is a popup (isPopup was true in constructor)\n      throw new Error('Openning popup on the popup is not supported now');\n    }\n    if (!this.n19popup.canOpenPopup()) {\n      return false;\n    }\n    this.view.SetActiveAppletInternal(this.applet); // or SetActiveApplet\n    // todo : check if control is valid\n    this._setActiveControl(name);\n    return this.n19popup.showPopupApplet(hide, cb, this.pm);\n  }\n\n  showMvgApplet(name, hide, cb) {\n    return this._showPopupApplet(name, hide, cb);\n  }\n\n  showPickApplet(name, hide, cb) {\n    return this._showPopupApplet(name, hide, cb);\n  }\n\n  getControls() {\n    const controls = {};\n    const appletControls = this.returnControls();\n    const arr = Object.keys(appletControls);\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = appletControls[arr[i]];\n      const controlUiType = control.GetUIType();\n      if (this._isSkipControl(controlUiType)) {\n        continue; // eslint-disable-line no-continue\n      }\n      const controlName = control.GetName();\n      const controlInputName = control.GetInputName();\n      const obj = {\n        name: controlName,\n        label: control.GetDisplayName(),\n        uiType: controlUiType,\n        required: this._isRequired(controlInputName),\n        boundedPick: control.IsBoundedPick() === '1',\n        staticPick: control.IsStaticBounded() === '1',\n        pickApplet: control.GetPickApplet(),\n        inputName: controlInputName,\n        isPostChanges: control.IsPostChanges(),\n        maxSize: control.GetMaxSize(),\n        maxChars: control.GetMaxChars(),\n        fieldName: control.GetFieldName(),\n        isLink: this.pm.ExecuteMethod('CanNavigate', controlName),\n      };\n      if (this.isListApplet) {\n        // ?\n        obj.readOnly = !this.pm.ExecuteMethod('CanUpdate',\n          this.pm.GetRenderer().GetColumnHelper().GetActualControlName(controlName));\n      } else {\n        obj.readOnly = !this.pm.ExecuteMethod('CanUpdate', controlName);\n      }\n      // add values to be displayed in the static pick list\n      if (obj.staticPick) {\n        obj.staticLOV = this._getStaticLOV(control.GetRadioGroupPropSet().childArray);\n        obj.lovs = obj.staticLOV.reduce((accumulator, currentValue) => {\n          accumulator.push({ lic: currentValue.FieldValue, val: currentValue.DisplayName });\n          return accumulator;\n        }, []);\n      }\n      controls[controlName] = obj;\n    }\n    return controls;\n  }\n\n  getRecordSet() {\n    return this.pm.Get('GetRecordSet');\n  }\n\n  getRawRecordSet() {\n    return this.pm.Get('GetRawRecordSet');\n  }\n\n  getRowListRowCount() {\n    // how much applet can display (specified in Siebel Tools)\n    // 10/20\n    return this.pm.Get('GetRowListRowCount');\n  }\n\n  getNumRows() {\n    // visible in applet\n    return this.pm.Get('GetNumRows');\n  }\n\n  getSelection() {\n    return this.pm.Get('GetSelection');\n  }\n\n  _navigate(method) {\n    if (!this.canInvokeMethod(method)) {\n      return false;\n    }\n    // const ps = SiebelApp.S_App.NewPropertySet();\n    // ps.SetProperty('SWEApplet', this.appletName);\n    // ps.SetProperty('SWEView', this.viewName);\n    // const ret = this.applet.InvokeControlMethod(method, ps, {});\n    // const ret = this.applet.InvokeMethod(method, ps, false); // false makes it synchronous\n    const ret = this.pm.ExecuteMethod('InvokeMethod', method, null, false); // false makes it synchronous\n    return ret;\n  }\n\n  nextRecord() {\n    // returns undefined for GotoNext when navigation was successful\n    // return false if the last record achieved\n    return this._navigate(this.isListApplet ? 'GotoNext' : 'GotoNextSet');\n  }\n\n  nextRecordSet() {\n    if (!this.isListApplet) {\n      return false;\n    }\n    return this._navigate('GotoNextSet');\n  }\n\n  positionOnRow(index) {\n    if (this.isListApplet) {\n      if (!this.pm.ExecuteMethod('CanInvokeMethod', 'PositionOnRow')) {\n        return false;\n      }\n      if (this.getNumRows() < index + 1) {\n        return false;\n      }\n      return this.pm.ExecuteMethod('HandleRowSelect', index, false, false);\n    }\n    return false;\n  }\n\n  prevRecord() {\n    if (this.isListApplet) {\n      return this.positionOnRow(this.pm.Get('GetSelection') - 1);\n    }\n    return this._navigate('GotoPreviousSet');\n  }\n\n  prevRecordSet() {\n    if (!this.isListApplet) {\n      return false;\n    }\n    return this._navigate('GotoPreviousSet');\n  }\n\n  _invokeCommandManager(cmd, cb) {\n    this.view.SetActiveAppletInternal(this.applet);\n    // maybe we don't need to set active applet if send the command as below\n    // \"*Browser Applet* *UndoRecord*Service Request Detail Applet* \"\n    const ai = {\n      scope: {\n        cb: (...args) => { // eslint-disable-line func-names\n          console.log('response in callback', cmd, args); // eslint-disable-line no-console\n          if (args[3]) {\n            console.log(cmd, 'was successful'); // eslint-disable-line no-console\n            if (typeof cb === 'function') {\n              cb(cmd);\n            }\n          } else {\n            console.log(cmd, 'WAS NOT successful'); // eslint-disable-line no-console\n          }\n        },\n      },\n    };\n    // todo: Do we always need to sent true\n    return SiebelApp.CommandManager.GetInstance().InvokeCommand.call(null, cmd, true, ai);\n  }\n\n  newRecord(cb) {\n    return this._invokeCommandManager('*Browser Applet* *NewRecord* * ', cb);\n  }\n\n  newRecordSync() {\n    return this.pm.ExecuteMethod('InvokeMethod', 'NewRecord', null, false);\n  }\n\n  undoRecord(cb) {\n    return this._invokeCommandManager('*Browser Applet* *UndoRecord* * ', cb);\n  }\n\n  writeRecord(cb) {\n    return this._invokeCommandManager('*Browser Applet* *WriteRecord* * ', cb);\n  }\n\n  writeRecordSync() {\n    return this.pm.ExecuteMethod('InvokeMethod', 'WriteRecord', null, false);\n  }\n\n  deleteRecordSync() {\n    return this.pm.ExecuteMethod('InvokeMethod', 'DeleteRecord', null, false);\n    // return _invokeCommandManager('*Browser Applet* *DeleteRecord* * ', cb);\n  }\n\n  _getValueForControl(controlUiType, value) { // from external system\n    // TODO: DateTime, numbers, and phones\n    if (this.consts.get('SWE_CTRL_CHECKBOX') === controlUiType) {\n      // convert true/false => Y/N\n      // do we want to support setting to null\n      value = value ? 'Y' : 'N'; // eslint-disable-line no-param-reassign\n    }\n    return value;\n  }\n\n  setControlValue(name, value) {\n    // TODO: If value is null, nothing happens, should we convert null to ''?\n    const control = this._getControl(name);\n    // TODO: Check if control is found\n    value = this._getValueForControl(control.GetUIType(), value); // eslint-disable-line no-param-reassign\n    // TODO: should we use SetCellValue for list applets?\n    this.pm.OnControlEvent(this.consts.get('PHYEVENT_CONTROL_FOCUS'), control);\n    const ret = this.pm.OnControlEvent(this.consts.get('PHYEVENT_CONTROL_BLUR'), control, value);\n    if (!ret) {\n      console.log(`Value ${value} was not set for ${control.toString()}`); // eslint-disable-line no-console\n      // todo: do we need to put back the old value\n    }\n    return ret;\n  }\n\n  getDynamicLOV(name) {\n    const control = this._getControl(name);\n    const controlInputName = control.GetInputName();\n    this.lov[controlInputName] = {};\n    const ps = SiebelApp.S_App.NewPropertySet();\n    ps.SetProperty('SWEField', controlInputName);\n    ps.SetProperty('SWEJI', false);\n    this.applet.InvokeMethod('GetQuickPickInfo', ps);\n    // is it possible to get something different than true\n    return this.lov[controlInputName];\n  }\n\n  getStaticLOV(name) {\n    const control = this._getControl(name);\n    const ret = [];\n    if ('1' === control.IsStaticBounded()) {\n      const arr = this._getStaticLOV(control.GetRadioGroupPropSet().childArray);\n      for (let i = 0; i < arr.length; i += 1) {\n        ret.push(arr[i].DisplayName);\n      }\n      ret.sort();\n    }\n    return ret;\n  }\n\n  getControlValue(controlUiType, value) { // to be exposed externally\n    // todo: datetime\n    let ret = value;\n    if (this.consts.get('SWE_CTRL_CHECKBOX') === controlUiType) {\n      // convert Y/N/null -> true/false/null\n      // do we need to send null?\n      switch (value) {\n        case 'Y':\n          ret = true;\n          break;\n        case 'N':\n          ret = false;\n          break;\n        default:\n          ret = null;\n      }\n    }\n    return ret;\n  }\n\n  getCurrentRecord(raw) {\n    const index = this.getSelection();\n    // todo: check if record exists\n    if (raw) {\n      return this.pm.Get('GetRawRecordSet')[index];\n    }\n    return this.pm.Get('GetRecordSet')[index];\n  }\n\n  // todo : should we have a method that accepts a list of the fields?\n  getCurrentRecordModel(_controls) {\n    if (!_controls) {\n      return false;\n    }\n    const arr = Object.keys(_controls);\n    const index = this.getSelection();\n    const appletControls = this.returnControls();\n    _controls.isRecord = index > -1; // eslint-disable-line no-param-reassign\n    let obj = {};\n    if (_controls.isRecord) {\n      obj = this.getRecordSet()[index];\n    }\n\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = appletControls[arr[i]];\n      if (typeof control !== 'undefined') {\n        const controlName = control.GetName();\n        const controlInputName = control.GetInputName();\n        const controlFieldName = control.GetFieldName();\n        if (_controls.isRecord) {\n          _controls[arr[i]] = { // eslint-disable-line no-param-reassign\n            value: this.getControlValue(control.GetUIType(), obj[controlFieldName]),\n            readonly: !this.pm.ExecuteMethod('CanUpdate', controlName),\n            isLink: this.pm.ExecuteMethod('CanNavigate', controlName),\n            label: control.GetDisplayName(),\n            isPostChanges: control.IsPostChanges(),\n            required: this._isRequired(controlInputName),\n            maxSize: control.GetMaxSize(),\n          };\n        } else { // no record\n          _controls[arr[i]] = { // eslint-disable-line no-param-reassign\n            value: '', // is it a right value\n            readonly: true,\n            isLink: false,\n            label: control.GetDisplayName(),\n            isPostChanges: control.IsPostChanges(),\n            required: this._isRequired(controlInputName),\n            maxSize: control.GetMaxSize(),\n          };\n        }\n      }\n    }\n    // todo: do we need to return true or better to return also the object?\n    return true;\n  }\n\n  _getControlInputNameForIdQuery() {\n    const appletControls = this.returnControls();\n    const arr = Object.keys(appletControls);\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = appletControls[arr[i]];\n      const controlUiType = control.GetUIType();\n      if (!this._isSkipControl(controlUiType)) {\n        // skipping also JCheckbox\n        // todo: do we need to skip also date?\n        if (controlUiType !== this.consts.get('SWE_CTRL_CHECKBOX')) {\n          return control.GetInputName();\n        }\n      }\n    }\n    throw new Error('cannot find a control for query');\n  }\n\n  _newQuery() {\n    return this.pm.ExecuteMethod('InvokeMethod', 'NewQuery', null, false);\n  }\n\n  queryById(rowId, cb) {\n    // maybe check if it is already in query mode / cancel the query\n    this._newQuery(); // ?\n\n    const method = 'ExecuteQuery';\n    const ai = {\n      scope: this,\n      async: true,\n      mask: false,\n      selfbusy: false,\n      args: [],\n    };\n    if (typeof cb === 'function') {\n      ai.cb = cb;\n    }\n\n    const psOutput = SiebelApp.S_App.NewPropertySet();\n    const psInput = SiebelApp.S_App.NewPropertySet();\n    psInput.SetProperty(this._getControlInputNameForIdQuery(), `Id=\"${rowId}\"`);\n\n    ai.args.push(method);\n    ai.args.push(psInput.Clone());\n\n    return this.applet.CallServerApplet(method, psInput, psOutput, ai);\n  }\n\n  query(params, cb) {\n    // maybe skip the new query if Object.keys(params).length is 0\n    // maybe check if it is already in query mode\n    this._newQuery();\n\n    const method = 'ExecuteQuery';\n    const ai = {\n      scope: this,\n      async: true,\n      mask: false,\n      selfbusy: false,\n      args: [],\n    };\n    if (typeof cb === 'function') {\n      ai.cb = cb;\n    }\n\n    const psOutput = SiebelApp.S_App.NewPropertySet();\n    const psInput = SiebelApp.S_App.NewPropertySet();\n    const arr = Object.keys(params);\n    const _controls = this.returnControls();\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = _controls[arr[i]];\n      psInput.SetProperty(control.GetInputName(), this._getValueForControl(control.GetUIType(), params[arr[i]]));\n    }\n    ai.args.push(method);\n    ai.args.push(psInput.Clone());\n\n    return this.applet.CallServerApplet(method, psInput, psOutput, ai);\n  }\n\n  getFieldToControlsMap(_controls) {\n    const ret = {};\n    const appletControls = this.returnControls();\n    const arr = Object.keys(_controls);\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = appletControls[arr[i]];\n      ret[control.GetFieldName()] = {\n        name: control.GetName(),\n        isPostChanges: control.IsPostChanges(),\n        uiType: control.GetUIType(),\n      };\n    }\n    return ret;\n  }\n\n  drilldown(name) {\n    // todo: check isLink of control?\n    // name is control name, not field\n    // index is not effective, and drilldown anyway happens on last selected record\n\n    if (!this.isListApplet) {\n      return false;\n    }\n    const index = this.getSelection();\n    return this.pm.ExecuteMethod('OnDrillDown', name, index);\n  }\n\n  gotoView(targetViewName, targetAppletName, id) {\n    // todo: get the applet name from the view definition\n    const rowId = typeof id === 'undefined' ? this.getCurrentRecord(true).Id : id;\n    let SWECmd = `GotoView&SWEView=${targetViewName}&SWEApplet0=${targetAppletName}`;\n    SWECmd += `&SWEBU=1&SWEKeepContext=FALSE&SWERowId0=${rowId}`;\n    SWECmd = encodeURI(SWECmd);\n    SiebelApp.S_App.GotoView(targetViewName, '', SWECmd, '');\n  }\n\n  _insertPending() {\n    return this.pm.Get('GetBusComp').insertPending;\n  }\n\n  requery(name) {\n    const service = SiebelApp.S_App.GetService('N19 BS');\n    if (service) {\n      const inPropSet = SiebelApp.S_App.NewPropertySet();\n      inPropSet.SetProperty('name', name);\n      service.InvokeMethod('Requery', inPropSet, {});\n    }\n  }\n\n  refresh(name) {\n    const service = SiebelApp.S_App.GetService('N19 BS');\n    if (service) {\n      const inPropSet = SiebelApp.S_App.NewPropertySet();\n      inPropSet.SetProperty('name', name);\n      service.InvokeMethod('Refresh', inPropSet, {});\n    }\n  }\n\n  pickRecord() {\n    // todo : check if it a pick applet\n    // todo : check CanInokeMethod\n    return this.pm.ExecuteMethod('InvokeMethod', 'PickRecord');\n  }\n\n  deleteRecords(cb) {\n    // method is not allowed to delete the primary\n    //  in this case it returns \"Method DeleteRecords is not allowed here\" SBL-UIF-00348\n    // todo: check canInvokeMethod ??\n    // todo: check if it is a Mvg?\n\n    const ret = this.pm.ExecuteMethod('InvokeMethod', 'DeleteRecords');\n    typeof cb === 'function' && cb();\n    return ret;\n  }\n\n  addRecords(cb) {\n    // check if the applet is MVG, canInvokeMethod\n    const ret = this.pm.ExecuteMethod('InvokeMethod', 'AddRecords');\n    typeof cb === 'function' && cb();\n    return ret;\n  }\n\n  _getViewTitle() {\n    return this.view.GetTitle(); // how GetViewSummary is different\n  }\n\n  _getAppletTitle() {\n    return this.applet.GetAppletLabel(); // how GetAppletSummary is different\n  }\n};\n","// let mySingleton = null;\n\nclass N19popup {\n  constructor() {\n    this.consts = SiebelJS.Dependency('SiebelApp.Constants');\n    this.isPopupHidden = false;\n    this.resolvePromise = null;\n    this.popupAppletN19 = null;\n    this.assocAppletN19 = null;\n\n    console.log(`${this.constructor.name} started...`); // eslint-disable-line no-console\n\n    // it will be a singleton, so there is no cleanup\n    this.N19processNewPopup = SiebelApp.S_App.ProcessNewPopup; // todo : remove it from SiebelAppFacade\n    SiebelApp.S_App.ProcessNewPopup = (ps) => {\n      let ret;\n      if (this.isPopupHidden) {\n        ret = this.processNewPopup(ps);\n      } else {\n        ret = this.N19processNewPopup.call(SiebelApp.S_App, ps);\n      }\n      return ret;\n    };\n\n    this.N19viewLoaded = SiebelApp.contentUpdater.viewLoaded;\n    SiebelApp.contentUpdater.viewLoaded = (...args) => {\n      const ret = this.N19viewLoaded.call(SiebelApp.contentUpdater, ...args);\n      if (typeof this.resolvePromise === 'function') {\n        const { appletName } = this.isPopupOpen(); // todo: use here the properties set on promiseResolving?\n        if (!appletName) {\n          throw new Error('Open Applet Name is not found in resolvePromise');\n        }\n        const applet = this.getPopupApplet(appletName);\n        const pm = applet.GetPModel();\n        // todo: avoid this circularity\n        this.popupAppletN19 = new SiebelAppFacade.N19Helper({ pm, isPopup: true }); // todo : split N19Helper into 2 classes\n        const obj = { appletName, popupAppletN19: this.popupAppletN19 };\n        // check if we have assoc\n        // we assume it is always assoc applet, but what about opening popup on the top of another - not tested it\n        const assocApplet = applet.GetPopupApplet();\n        if (assocApplet) {\n          this.assocAppletN19 = new SiebelAppFacade.N19Helper({\n            pm: assocApplet.GetPModel(),\n            isPopup: true,\n          });\n          obj.assocAppletN19 = this.assocAppletN19;\n        }\n        this.resolvePromise(obj);\n        this.resolvePromise = null;\n      }\n      return ret;\n    };\n  }\n\n  canOpenPopup() {\n    return typeof this.resolvePromise !== 'function';\n  }\n\n  processNewPopup(ps) {\n    SiebelApp.S_App.SetShowNewPage(!0);\n    const popupPM = SiebelApp.S_App.GetPopupPM();\n\n    popupPM.SetProperty('CanProcessLayout', !1);\n    popupPM.SetProperty('isPopupPick', false);\n    popupPM.SetProperty('isPopupMVGAssoc', false);\n    popupPM.SetProperty('isPopupMVGSelected', false);\n    popupPM.SetProperty('isPopupAssoc', false);\n    popupPM.SetProperty('currPopups', []);\n    popupPM.SetProperty('isSIPopup', ps.GetProperty(this.consts.get('SWE_IS_SI_POPUP')));\n    popupPM.SetProperty('isPrevPopupVisible', !1);\n\n    if (!popupPM.GetRenderer()) {\n      popupPM.Setup();\n    }\n\n    const activeView = SiebelApp.S_App.GetActiveView();\n    if (activeView) {\n      const activeApplet = activeView.GetActiveApplet();\n      if (activeApplet) {\n        activeView.SetActiveAppletBeforePopup(activeApplet);\n      }\n    }\n\n    popupPM.AddProperty('state', 'visible'); // todo: we need also to restore the PM\n\n    let url = ps.GetProperty('URL');\n    url = SiebelApp.S_App.GetPageURL() + url.split('start.swe')[1];\n    popupPM.SetProperty('url', url);\n\n    return 'refreshpopup';\n  }\n\n  reInitPopup() {\n    const popupPM = SiebelApp.S_App.GetPopupPM();\n    popupPM.Init();\n    popupPM.Setup();\n  }\n\n  closePopupApplet(applet) {\n    const isPopupApplet = typeof applet.GetPopupAppletName === 'function';\n    const isPickApplet = typeof applet.GetPickAppletName === 'function';\n\n    if (isPopupApplet || isPickApplet) {\n      // todo : check canInvokeMethod\n      const ret = applet.GetPModel().ExecuteMethod('InvokeMethod', 'CloseApplet');\n      // it could be better if we don't have a Siebel Applet on the view\n      // in this case, we would not need to reInitPopup\n      if (this.isPopupHidden) {\n        this.reInitPopup();\n      }\n      //\n      this.popupAppletN19 = null;\n      this.assocAppletN19 = null;\n      return ret;\n    }\n    throw new Error('This applet is neither pick nor popup');\n  }\n\n  isPopupOpen() { // todo: when we set some properties on resolve, do we need this method now\n    // todo: here reuse the properties that set when the Promise resolved\n    const currPopups = SiebelApp.S_App.GetPopupPM().Get('currPopups');\n    if (0 === currPopups.length) {\n      return { isOpen: false };\n    }\n    if (1 === currPopups.length) {\n      return { isOpen: true, appletName: currPopups[0].GetName(), controlName: currPopups[0].GetPopupControl() };\n    }\n    if (2 === currPopups.length) {\n      // this is a shuttle or\n      // maybe we opened a popup applet on the top of pick applet - TODO: // test it\n      //      test it  - maybe we need to close the several applets\n      for (let i = 0; i < currPopups.length; i += 1) {\n        if (typeof currPopups[1].GetPopupAppletName === 'function') {\n          return { isOpen: true, appletName: currPopups[i].GetName(), controlName: currPopups[i].GetPopupControl() };\n        }\n      }\n      throw new Error('Mvg applet is not found...');\n    }\n    // todo: test if we can get to here\n    //    maybe when we open a new applet on top of the shuttle applet\n    throw new Error('should not be here...');\n  }\n\n  getPopupAppletPM(appletName) {\n    const applet = this.getPopupApplet(appletName);\n    return applet.GetPModel();\n  }\n\n  getPopupApplet(appletName) {\n    const applet = SiebelApp.S_App.GetActiveView().GetAppletMap()[appletName];\n    if (!applet) {\n      throw new Error(`The ${appletName} is not found in applet map`);\n    }\n    return applet;\n  }\n\n  showPopupApplet(hide, cb, pm) {\n    const { isOpen, appletName } = this.isPopupOpen(); // todo: use the properties set on promise resolving?\n    if (isOpen) {\n      // this code will close the applet even if this applet was originated by another applet\n      console.log(`closing ${appletName} in _showPopupApplet...`); // eslint-disable-line no-console\n      // maybe do not close if the applet to be opened if the same as already opened?\n      this.closePopupApplet(this.getPopupApplet(appletName));\n      // todo: check if got it successfully closed?\n    }\n    this.isPopupHidden = !!hide; // todo: do we need to keep the show the applet\n\n    pm.ExecuteMethod('InvokeMethod', 'EditPopup', null, false); // seems we can also to call EditField\n\n    // eslint-disable-next-line no-return-assign\n    let ret = new Promise(resolve => this.resolvePromise = resolve); // eslint-disable-line no-param-assign\n    if (typeof cb === 'function') {\n      ret = ret.then(cb);\n    }\n    return ret;\n  }\n}\n\nexport default N19popup;\n"],"sourceRoot":""}