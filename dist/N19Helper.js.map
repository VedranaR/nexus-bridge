{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/n19popup.js"],"names":["SiebelAppFacade","N19Helper","settings","consts","SiebelJS","Dependency","pm","appletName","Get","view","SiebelApp","S_App","GetActiveView","viewName","GetName","applet","GetAppletMap","isListApplet","GetListOfColumns","appletId","required","lov","appletInputs","document","getElementById","querySelectorAll","i","length","attributes","push","name","nodeValue","AttachNotificationHandler","get","propSet","type","GetProperty","arr","CCFMiscUtil_StringToArray","splice","filter","el","console","log","N19popup","n19popup","GetControl","GetControls","method","ExecuteMethod","inputName","indexOf","ret","propArray","SetActiveControl","_getControl","hide","cb","canOpenPopup","SetActiveAppletInternal","_setActiveControl","showPopupApplet","controls","appletControls","returnControls","Object","keys","control","controlUiType","GetUIType","_isSkipControl","controlName","controlInputName","GetInputName","obj","label","GetDisplayName","uiType","_isRequired","boundedPick","IsBoundedPick","staticPick","IsStaticBounded","pickApplet","GetPickApplet","isPostChanges","IsPostChanges","maxSize","GetMaxSize","maxChars","GetMaxChars","fieldName","GetFieldName","isLink","readOnly","GetRenderer","GetColumnHelper","GetActualControlName","staticLOV","_getStaticLOV","GetRadioGroupPropSet","childArray","canInvokeMethod","_navigate","index","getNumRows","positionOnRow","cmd","f","ai","scope","args","CommandManager","GetInstance","InvokeCommand","call","_invokeCommandManager","value","_getValueForControl","OnControlEvent","toString","ps","NewPropertySet","SetProperty","InvokeMethod","DisplayName","sort","raw","getSelection","_controls","isRecord","getRecordSet","controlFieldName","getControlValue","readonly","Error","rowId","_newQuery","async","mask","selfbusy","psOutput","psInput","_getControlInputNameForIdQuery","Clone","CallServerApplet","params","targetViewName","targetAppletName","id","getCurrentRecord","Id","SWECmd","encodeURI","GotoView","insertPending","service","GetService","inPropSet","activeControl","GetTitle","GetAppletLabel","NotifyNewDataWS","isPopupHidden","resolvePromise","constructor","N19processNewPopup","ProcessNewPopup","processNewPopup","N19viewLoaded","contentUpdater","viewLoaded","isPopupOpen","SetShowNewPage","popupPM","GetPopupPM","Setup","activeView","activeApplet","GetActiveApplet","SetActiveAppletBeforePopup","AddProperty","url","GetPageURL","split","Init","isPopupApplet","GetPopupAppletName","isPickApplet","GetPickAppletName","GetPModel","reInitPopup","currPopups","isOpen","GetPopupControl","closePopupApplet","N19","getApplet","Promise","resolve","then"],"mappings":"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","file":"N19Helper.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// for now only for form and list applets\n\nimport N19popup from './n19popup';\n\nSiebelAppFacade.N19Helper = class {\n  constructor(settings) {\n    this.consts = SiebelJS.Dependency('SiebelApp.Constants');\n    this.pm = settings.pm;\n    this.appletName = this.pm.Get('GetName');\n    this.view = SiebelApp.S_App.GetActiveView();\n    this.viewName = this.view.GetName();\n    this.applet = SiebelApp.S_App.GetActiveView().GetAppletMap()[this.appletName];\n    this.isListApplet = typeof this.applet.GetListOfColumns === 'function';\n    this.appletId = `s_${this.pm.Get('GetFullId')}_div`;\n    this.required = []; // will be empty for list applet\n    this.lov = {};\n\n    // populate the required array for form applets\n    if (!this.isListApplet) {\n      const appletInputs = document.getElementById(this.appletId).querySelectorAll('input');\n      for (let i = 0; i < appletInputs.length; i += 1) {\n        if (appletInputs[i].attributes['aria-required']) {\n          this.required.push(appletInputs[i].attributes.name.nodeValue);\n        }\n      }\n    }\n\n    // listener to get dynamic LOVs\n    this.pm.AttachNotificationHandler(this.consts.get('SWE_PROP_BC_NOTI_GENERIC'), (propSet) => {\n      const type = propSet.GetProperty(this.consts.get('SWE_PROP_NOTI_TYPE'));\n      if (type === 'GetQuickPickInfo') {\n        const arr = [];\n        CCFMiscUtil_StringToArray(propSet.GetProperty(this.consts.get('SWE_PROP_ARGS_ARRAY')), arr);\n        if (this.viewName === arr[1] && this.appletName === arr[2]) {\n          this.lov[arr[3]] = arr.splice(5).filter(el => el !== '');\n        }\n      }\n    });\n\n    // eslint-disable-next-line no-console\n    console.log('N19Helper started....', this.appletName);\n\n    // instantinate the n19popup\n    if (!SiebelAppFacade.N19popup) {\n      SiebelAppFacade.N19popup = new N19popup();\n    }\n    this.n19popup = SiebelAppFacade.N19popup;\n  }\n\n  getApplet() {\n    return this.applet;\n  }\n\n  _getControl(name) {\n    return this.applet.GetControl(name);\n  }\n\n  returnControls() {\n    if (this.isListApplet) {\n      return this.applet.GetListOfColumns();\n    }\n    return this.applet.GetControls();\n    // the same - ? // return pm.Get('GetControls');\n  }\n\n  canInvokeMethod(method) {\n    return this.pm.ExecuteMethod('CanInvokeMethod', method);\n  }\n\n  // called into the getControls to reduce the amount of the returned controls\n  _isSkipControl(type) {\n    // https://docs.oracle.com/cd/E74890_01/books/ConfigOpenUI/appendix_a_api002.htm\n    // maybe we need to exclude more types\n    return (type === this.consts.get('SWE_PST_BUTTON_CTRL'))\n      || (type === this.consts.get('SWE_CTRL_LINK'))\n      || (type === this.consts.get('SWE_CTRL_PLAINTEXT'))\n      || (type === 'null'); // GetUiType returns string\n  }\n\n  _isRequired(inputName) {\n    // required is empty for list applets\n    return this.required.indexOf(inputName) > -1;\n  }\n\n  _getStaticLOV(arr) {\n    const ret = [];\n    for (let i = 0; i < arr.length; i += 1) {\n      ret.push(arr[i].propArray);\n    }\n    return ret;\n  }\n\n  _setActiveControl(name) {\n    return this.applet.SetActiveControl(this._getControl(name));\n  }\n\n  showPopupApplet(name, hide, cb) {\n    if (!this.n19popup.canOpenPopup()) {\n      return false;\n    }\n    this.view.SetActiveAppletInternal(this.applet); // or SetActiveApplet\n    this._setActiveControl(name);\n    return this.n19popup.showPopupApplet(hide, cb, this.pm);\n  }\n\n  showMvgApplet(name, hide, cb) {\n    return this.showPopupApplet(name, hide, cb);\n  }\n\n  showPickApplet(name, hide, cb) {\n    return this.showPopupApplet(name, hide, cb);\n  }\n\n  getControls() {\n    const controls = {};\n    const appletControls = this.returnControls();\n    const arr = Object.keys(appletControls);\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = appletControls[arr[i]];\n      const controlUiType = control.GetUIType();\n      if (this._isSkipControl(controlUiType)) {\n        continue; // eslint-disable-line no-continue\n      }\n      const controlName = control.GetName();\n      const controlInputName = control.GetInputName();\n      const obj = {\n        name: controlName,\n        label: control.GetDisplayName(),\n        uiType: controlUiType,\n        required: this._isRequired(controlInputName),\n        boundedPick: control.IsBoundedPick() === '1',\n        staticPick: control.IsStaticBounded() === '1',\n        pickApplet: control.GetPickApplet(),\n        inputName: controlInputName,\n        isPostChanges: control.IsPostChanges(),\n        maxSize: control.GetMaxSize(),\n        maxChars: control.GetMaxChars(),\n        fieldName: control.GetFieldName(),\n        isLink: this.pm.ExecuteMethod('CanNavigate', controlName),\n      };\n      if (this.isListApplet) {\n        // ?\n        obj.readOnly = !this.pm.ExecuteMethod('CanUpdate',\n          this.pm.GetRenderer().GetColumnHelper().GetActualControlName(controlName));\n      } else {\n        obj.readOnly = !this.pm.ExecuteMethod('CanUpdate', controlName);\n      }\n      // add values to be displayed in the static pick list\n      if (obj.staticPick) {\n        obj.staticLOV = this._getStaticLOV(control.GetRadioGroupPropSet().childArray);\n      }\n      controls[controlName] = obj;\n    }\n    return controls;\n  }\n\n  getRecordSet() {\n    return this.pm.Get('GetRecordSet');\n  }\n\n  getRawRecordSet() {\n    return this.pm.Get('GetRawRecordSet');\n  }\n\n  getRowListRowCount() {\n    // how much applet can display (specified in Siebel Tools)\n    // 10/20\n    return this.pm.Get('GetRowListRowCount');\n  }\n\n  getNumRows() {\n    // visible in applet\n    return this.pm.Get('GetNumRows');\n  }\n\n  getSelection() {\n    return this.pm.Get('GetSelection');\n  }\n\n  _navigate(method) {\n    if (!this.canInvokeMethod(method)) {\n      return false;\n    }\n    // const ps = SiebelApp.S_App.NewPropertySet();\n    // ps.SetProperty('SWEApplet', this.appletName);\n    // ps.SetProperty('SWEView', this.viewName);\n    // const ret = this.applet.InvokeControlMethod(method, ps, {});\n    // const ret = this.applet.InvokeMethod(method, ps, false); // false makes it synchronous\n    const ret = this.pm.ExecuteMethod('InvokeMethod', method, null, false); // false makes it synchronous\n    return ret;\n  }\n\n  nextRecord() {\n    // returns undefined for GotoNext when navigation was successful\n    // return false if the last record achieved\n    return this._navigate(this.isListApplet ? 'GotoNext' : 'GotoNextSet');\n  }\n\n  nextRecordSet() {\n    if (!this.isListApplet) {\n      return false;\n    }\n    return this._navigate('GotoNextSet');\n  }\n\n  positionOnRow(index) {\n    if (this.isListApplet) {\n      if (!this.pm.ExecuteMethod('CanInvokeMethod', 'PositionOnRow')) {\n        return false;\n      }\n      if (this.getNumRows() < index + 1) {\n        return false;\n      }\n      return this.pm.ExecuteMethod('HandleRowSelect', index, false, false);\n    }\n    return false;\n  }\n\n  prevRecord() {\n    if (this.isListApplet) {\n      return this.positionOnRow(this.pm.Get('GetSelection') - 1);\n    }\n    return this._navigate('GotoPreviousSet');\n  }\n\n  prevRecordSet() {\n    if (!this.isListApplet) {\n      return false;\n    }\n    return this._navigate('GotoPreviousSet');\n  }\n\n  _invokeCommandManager(cmd, f) {\n    this.view.SetActiveAppletInternal(this.applet);\n    // maybe we don't need to set active applet if send the command as below\n    // \"*Browser Applet* *UndoRecord*Service Request Detail Applet* \"\n    const ai = {\n      scope: {\n        cb: (...args) => { // eslint-disable-line func-names\n          console.log('response in callback', cmd, args); // eslint-disable-line no-console\n          if (args[3]) {\n            console.log(cmd, 'was successful'); // eslint-disable-line no-console\n            if (typeof f === 'function') {\n              f(cmd);\n            }\n          } else {\n            console.log(cmd, 'WAS NOT successful'); // eslint-disable-line no-console\n          }\n        },\n      },\n    };\n    // todo: Do we always need to sent true\n    return SiebelApp.CommandManager.GetInstance().InvokeCommand.call(null, cmd, true, ai);\n  }\n\n  newRecord(cb) {\n    return this._invokeCommandManager('*Browser Applet* *NewRecord* * ', cb);\n  }\n\n  newRecordSync() {\n    return this.pm.ExecuteMethod('InvokeMethod', 'NewRecord', null, false);\n  }\n\n  undoRecord(cb) {\n    return this._invokeCommandManager('*Browser Applet* *UndoRecord* * ', cb);\n  }\n\n  writeRecord(cb) {\n    return this._invokeCommandManager('*Browser Applet* *WriteRecord* * ', cb);\n  }\n\n  writeRecordSync() {\n    return this.pm.ExecuteMethod('InvokeMethod', 'WriteRecord', null, false);\n  }\n\n  deleteRecord(cb) {\n    console.log(typeof cb); // eslint-disable-line no-console\n    return this.pm.ExecuteMethod('InvokeMethod', 'DeleteRecord', null, false);\n    // return _invokeCommandManager('*Browser Applet* *DeleteRecord* * ', cb);\n  }\n\n  _getValueForControl(controlUiType, value) { // from external system\n    // TODO: DateTime, numbers, and phones\n    if (this.consts.get('SWE_CTRL_CHECKBOX') === controlUiType) {\n      // convert true/false => Y/N\n      // do we want to support setting to null\n      value = value ? 'Y' : 'N'; // eslint-disable-line no-param-reassign\n    }\n    return value;\n  }\n\n  setControlValue(name, value) {\n    // TODO: If value is null, nothing happens, should we convert null to ''?\n    const control = this._getControl(name);\n    // TODO: Check if control is found\n    value = this._getValueForControl(control.GetUIType(), value); // eslint-disable-line no-param-reassign\n    // TODO: should we use SetCellValue for list applets?\n    this.pm.OnControlEvent(this.consts.get('PHYEVENT_CONTROL_FOCUS'), control);\n    const ret = this.pm.OnControlEvent(this.consts.get('PHYEVENT_CONTROL_BLUR'), control, value);\n    if (!ret) {\n      console.log(`Value ${value} was not set for ${control.toString()}`); // eslint-disable-line no-console\n      // todo: do we need to put back the old value\n    }\n    return ret;\n  }\n\n  getDynamicLOV(name) {\n    const control = this._getControl(name);\n    const controlInputName = control.GetInputName();\n    this.lov[controlInputName] = {};\n    const ps = SiebelApp.S_App.NewPropertySet();\n    ps.SetProperty('SWEField', controlInputName);\n    ps.SetProperty('SWEJI', false);\n    this.applet.InvokeMethod('GetQuickPickInfo', ps);\n    // is it possible to get something different than true\n    return this.lov[controlInputName];\n  }\n\n  getStaticLOV(name) {\n    const control = this._getControl(name);\n    const ret = [];\n    if ('1' === control.IsStaticBounded()) {\n      const arr = this._getStaticLOV(control.GetRadioGroupPropSet().childArray);\n      for (let i = 0; i < arr.length; i += 1) {\n        ret.push(arr[i].DisplayName);\n      }\n      ret.sort();\n    }\n    return ret;\n  }\n\n  getControlValue(controlUiType, value) { // to be exposed externally\n    // todo: datetime\n    let ret = value;\n    if (this.consts.get('SWE_CTRL_CHECKBOX') === controlUiType) {\n      // convert Y/N/null -> true/false/null\n      // do we need to send null?\n      switch (value) {\n        case 'Y':\n          ret = true;\n          break;\n        case 'N':\n          ret = false;\n          break;\n        default:\n          ret = null;\n      }\n    }\n    return ret;\n  }\n\n  getCurrentRecord(raw) {\n    const index = this.getSelection();\n    // todo: check if record exists\n    if (raw) {\n      return this.pm.Get('GetRawRecordSet')[index];\n    }\n    return this.pm.Get('GetRecordSet')[index];\n  }\n\n  // todo : should we have a method that accepts a list of the fields?\n  getCurrentRecordModel(_controls) {\n    if (!_controls) {\n      return false;\n    }\n    const arr = Object.keys(_controls);\n    const index = this.getSelection();\n    const appletControls = this.returnControls();\n    _controls.isRecord = index > -1; // eslint-disable-line no-param-reassign\n    let obj = {};\n    if (_controls.isRecord) {\n      obj = this.getRecordSet()[index];\n    }\n\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = appletControls[arr[i]];\n      if (typeof control !== 'undefined') {\n        const controlName = control.GetName();\n        const controlInputName = control.GetInputName();\n        const controlFieldName = control.GetFieldName();\n        if (_controls.isRecord) {\n          _controls[arr[i]] = { // eslint-disable-line no-param-reassign\n            value: this.getControlValue(control.GetUIType(), obj[controlFieldName]),\n            readonly: !this.pm.ExecuteMethod('CanUpdate', controlName),\n            isLink: this.pm.ExecuteMethod('CanNavigate', controlName),\n            label: control.GetDisplayName(),\n            isPostChanges: control.IsPostChanges(),\n            required: this._isRequired(controlInputName),\n            maxSize: control.GetMaxSize(),\n          };\n        } else { // no record\n          _controls[arr[i]] = { // eslint-disable-line no-param-reassign\n            value: '', // is it a right value\n            readonly: true,\n            isLink: false,\n            label: control.GetDisplayName(),\n            isPostChanges: control.IsPostChanges(),\n            required: this._isRequired(controlInputName),\n            maxSize: control.GetMaxSize(),\n          };\n        }\n      }\n    }\n    // todo: do we need to return true or better to return also the object?\n    return true;\n  }\n\n  _getControlInputNameForIdQuery() {\n    const appletControls = this.returnControls();\n    const arr = Object.keys(appletControls);\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = appletControls[arr[i]];\n      const controlUiType = control.GetUIType();\n      if (!this._isSkipControl(controlUiType)) {\n        // skipping also JCheckbox\n        // todo: do we need to skip also date?\n        if (controlUiType !== this.consts.get('SWE_CTRL_CHECKBOX')) {\n          return control.GetInputName();\n        }\n      }\n    }\n    throw new Error('cannot find a control for query');\n  }\n\n  _newQuery() {\n    return this.pm.ExecuteMethod('InvokeMethod', 'NewQuery', null, false);\n  }\n\n  queryById(rowId, cb) {\n    // maybe check if it is already in query mode\n    this._newQuery(); // ?\n\n    const method = 'ExecuteQuery';\n    const ai = {\n      scope: this,\n      async: true,\n      mask: false,\n      selfbusy: false,\n      args: [],\n    };\n    if (typeof cb === 'function') {\n      ai.cb = cb;\n    }\n\n    const psOutput = SiebelApp.S_App.NewPropertySet();\n    const psInput = SiebelApp.S_App.NewPropertySet();\n    psInput.SetProperty(this._getControlInputNameForIdQuery(), `Id=\"${rowId}\"`);\n\n    ai.args.push(method);\n    ai.args.push(psInput.Clone());\n\n    return this.applet.CallServerApplet(method, psInput, psOutput, ai);\n  }\n\n  query(params, cb) {\n    // maybe skip the new query if Object.keys(params).length is 0\n    // maybe check if it is already in query mode\n    this._newQuery();\n\n    const method = 'ExecuteQuery';\n    const ai = {\n      scope: this,\n      async: true,\n      mask: false,\n      selfbusy: false,\n      args: [],\n    };\n    if (typeof cb === 'function') {\n      ai.cb = cb;\n    }\n\n    const psOutput = SiebelApp.S_App.NewPropertySet();\n    const psInput = SiebelApp.S_App.NewPropertySet();\n    const arr = Object.keys(params);\n    const _controls = this.returnControls();\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = _controls[arr[i]];\n      psInput.SetProperty(control.GetInputName(), this._getValueForControl(control.GetUIType(), params[arr[i]]));\n    }\n    ai.args.push(method);\n    ai.args.push(psInput.Clone());\n\n    return this.applet.CallServerApplet(method, psInput, psOutput, ai);\n  }\n\n  getFieldToControlsMap(_controls) {\n    const ret = {};\n    const appletControls = this.returnControls();\n    const arr = Object.keys(_controls);\n    for (let i = 0; i < arr.length; i += 1) {\n      const control = appletControls[arr[i]];\n      ret[control.GetFieldName()] = {\n        name: control.GetName(),\n        isPostChanges: control.IsPostChanges(),\n        uiType: control.GetUIType(),\n      };\n    }\n    return ret;\n  }\n\n  drilldown(name) {\n    // todo: check isLink of control?\n    // name is control name, not field\n    // index is not effective, and drilldown anyway happens on last selected record\n\n    if (!this.isListApplet) {\n      return false;\n    }\n    const index = this.getSelection();\n    return this.pm.ExecuteMethod('OnDrillDown', name, index);\n  }\n\n  gotoView(targetViewName, targetAppletName, id) {\n    // todo: get the applet name from the view definition\n    const rowId = typeof id === 'undefined' ? this.getCurrentRecord(true).Id : id;\n    let SWECmd = `GotoView&SWEView=${targetViewName}&SWEApplet0=${targetAppletName}`;\n    SWECmd += `&SWEBU=1&SWEKeepContext=FALSE&SWERowId0=${rowId}`;\n    SWECmd = encodeURI(SWECmd);\n    SiebelApp.S_App.GotoView(targetViewName, '', SWECmd, '');\n  }\n\n  insertPending() {\n    return this.pm.Get('GetBusComp').insertPending;\n  }\n\n  requery(name) {\n    const service = SiebelApp.S_App.GetService('N19 BS');\n    if (service) {\n      const inPropSet = SiebelApp.S_App.NewPropertySet();\n      inPropSet.SetProperty('name', name);\n      service.InvokeMethod('Requery', inPropSet, {});\n    }\n  }\n\n  refresh(name) {\n    const service = SiebelApp.S_App.GetService('N19 BS');\n    if (service) {\n      const inPropSet = SiebelApp.S_App.NewPropertySet();\n      inPropSet.SetProperty('name', name);\n      service.InvokeMethod('Refresh', inPropSet, {});\n    }\n  }\n\n  pickRecord() {\n    // todo : check if it a pick applet\n    // todo : check CanInokeMethod\n    return this.pm.ExecuteMethod('InvokeMethod', 'PickRecord');\n  }\n\n  deleteRecords(cb) {\n    // method is not allowed to delete the primary\n    //  in this case it returns \"Method DeleteRecords is not allowed here\" SBL-UIF-00348\n    // todo: check canInvokeMethod ??\n    // todo: check if it is a Mvg?\n\n    const ret = this.pm.ExecuteMethod('InvokeMethod', 'DeleteRecords');\n\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    return ret;\n  }\n\n  addRecords(cb) {\n    // check if the applet is MVG, canInvokeMethod\n    const ret = this.pm.ExecuteMethod('InvokeMethod', 'AddRecords');\n\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    return ret;\n  }\n\n  _getActiveControlName() {\n    const activeControl = this.pm.Get('GetActiveControl');\n    return activeControl ? activeControl.GetName() : '';\n  }\n\n  _getViewTitle() {\n    return this.view.GetTitle(); // how GetViewSummary is different\n  }\n\n  _getAppletTitle() {\n    return this.applet.GetAppletLabel(); // how GetAppletSummary is different\n  }\n\n  _clearQuery() { // todo : could we get it calling the query methods with empty object\n    this.pm.ExecuteMethod('InvokeMethod', 'NewQuery', null, false);\n    this.pm.ExecuteMethod('InvokeMethod', 'ExecuteQuery', null, false);\n  }\n\n  _isInQueryMode() {\n    return this.pm.Get('IsInQueryMode');\n  }\n\n  _NotifyNewDataWS(name) { // todo: we don't need this method if we don't have any Siebel applets\n    return this.applet.NotifyNewDataWS(name);\n  }\n\n  _firstRecord() { // temp method, assumes that no scrolling happened\n    if (this.isListApplet) {\n      if (this.getSelection() !== 0) {\n        return this.positionOnRow(0);\n      }\n      return true;\n    }\n    return false;\n  }\n};\n","class N19popup {\n  constructor() {\n    this.consts = SiebelJS.Dependency('SiebelApp.Constants');\n    this.isPopupHidden = false;\n    this.resolvePromise = null;\n\n    console.log(`${this.constructor.name} started...`); // eslint-disable-line no-console\n\n    // it will be a singleton, so there is no cleanup\n    SiebelAppFacade.N19processNewPopup = SiebelApp.S_App.ProcessNewPopup;\n    SiebelApp.S_App.ProcessNewPopup = (ps) => {\n      let ret;\n      if (this.isPopupHidden) {\n        ret = this.processNewPopup(ps);\n      } else {\n        ret = SiebelAppFacade.N19processNewPopup.call(SiebelApp.S_App, ps);\n      }\n      return ret;\n    };\n\n    SiebelAppFacade.N19viewLoaded = SiebelApp.contentUpdater.viewLoaded;\n    SiebelApp.contentUpdater.viewLoaded = (...args) => {\n      const ret = SiebelAppFacade.N19viewLoaded.call(SiebelApp.contentUpdater, ...args);\n      if (typeof this.resolvePromise === 'function') {\n        const { appletName } = this.isPopupOpen();\n        this.resolvePromise(appletName);\n        this.resolvePromise = null;\n      }\n      return ret;\n    };\n  }\n\n  canOpenPopup() {\n    return typeof this.resolvePromise !== 'function';\n  }\n\n  processNewPopup(ps) {\n    SiebelApp.S_App.SetShowNewPage(!0);\n    const popupPM = SiebelApp.S_App.GetPopupPM();\n\n    popupPM.SetProperty('CanProcessLayout', !1);\n    popupPM.SetProperty('isPopupPick', false);\n    popupPM.SetProperty('isPopupMVGAssoc', false);\n    popupPM.SetProperty('isPopupMVGSelected', false);\n    popupPM.SetProperty('isPopupAssoc', false);\n    popupPM.SetProperty('currPopups', []);\n    popupPM.SetProperty('isSIPopup', ps.GetProperty(this.consts.get('SWE_IS_SI_POPUP')));\n    popupPM.SetProperty('isPrevPopupVisible', !1);\n\n    if (!popupPM.GetRenderer()) {\n      popupPM.Setup();\n    }\n\n    const activeView = SiebelApp.S_App.GetActiveView();\n    if (activeView) {\n      const activeApplet = activeView.GetActiveApplet();\n      if (activeApplet) {\n        activeView.SetActiveAppletBeforePopup(activeApplet);\n      }\n    }\n\n    popupPM.AddProperty('state', 'visible'); // todo: we need also to restore the PM\n\n    let url = ps.GetProperty('URL');\n    url = SiebelApp.S_App.GetPageURL() + url.split('start.swe')[1];\n    popupPM.SetProperty('url', url);\n\n    return 'refreshpopup';\n  }\n\n  reInitPopup() {\n    const popupPM = SiebelApp.S_App.GetPopupPM();\n    popupPM.Init();\n    popupPM.Setup();\n  }\n\n  closePopupApplet(applet) {\n    const isPopupApplet = typeof applet.GetPopupAppletName === 'function';\n    const isPickApplet = typeof applet.GetPickAppletName === 'function';\n\n    if (isPopupApplet || isPickApplet) {\n      // todo : check canInvokeMethod\n      const ret = applet.GetPModel().ExecuteMethod('InvokeMethod', 'CloseApplet');\n      // it could be better if we don't have a Siebel Applet on the view\n      // in this case, we would not need to reInitPopup\n      if (this.isPopupHidden) {\n        this.reInitPopup();\n      }\n      return ret;\n    }\n    throw new Error('This applet is neither pick nor popup');\n  }\n\n  isPopupOpen() {\n    // this code will close the applet even if this applet was originated by another applet\n    const currPopups = SiebelApp.S_App.GetPopupPM().Get('currPopups');\n    if (0 === currPopups.length) {\n      return { isOpen: false };\n    }\n    if (1 === currPopups.length) {\n      return { isOpen: true, appletName: currPopups[0].GetName(), controlName: currPopups[0].GetPopupControl() };\n    }\n    if (2 === currPopups.length) {\n      // this is a shuttle or\n      // maybe we opened a popup applet on the top of pick applet - TODO: // test it\n      //      test it  - maybe we need to close the several applets\n      for (let i = 0; i < currPopups.length; i += 1) {\n        if (typeof currPopups[1].GetPopupAppletName === 'function') {\n          return { isOpen: true, appletName: currPopups[i].GetName(), controlName: currPopups[i].GetPopupControl() };\n        }\n      }\n      throw new Error('Mvg applet is not found...');\n    }\n    // todo: test if we can get to here\n    //    maybe when we open a new applet on top of the shuttle applet\n    throw new Error('how did I get here...');\n  }\n\n  showPopupApplet(hide, cb, pm) {\n    const { isOpen, appletName } = this.isPopupOpen();\n    if (isOpen) {\n      console.log(`closing ${appletName} in _showPopupApplet...`); // eslint-disable-line no-console\n      // maybe do not close if the applet to be opened if the same as already opened?\n      this.closePopupApplet(SiebelAppFacade.N19[appletName].getApplet());\n      // todo: check if got it successfully closed?\n    }\n    this.isPopupHidden = !!hide;\n\n    pm.ExecuteMethod('InvokeMethod', 'EditPopup', null, false); // seems we can also to call EditField\n\n    // eslint-disable-next-line no-return-assign\n    const ret = new Promise(resolve => this.resolvePromise = resolve); // eslint-disable-line no-param-assign\n    if (typeof cb === 'function') {\n      return ret.then(cb);\n    }\n    return ret;\n  }\n}\n\nexport default N19popup;\n"],"sourceRoot":""}